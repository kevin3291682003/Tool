<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>打卡網頁</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 2rem;
      background: linear-gradient(90deg, #000000, #7979ec);
    }
    .container {
      background-color: rgba(42, 42, 42, 0.6);
      backdrop-filter: blur(10px);
      padding: 2rem;
      border-radius: 10px;
      max-width: 400px;
      margin: auto;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    input[type="text"] {
      width: 100%;
      padding: 0.5rem;
      font-size: 1rem;
      margin-bottom: 1rem;
      background-color: rgba(42, 42, 42, 0.6);
      backdrop-filter: blur(10px);
      border-radius: 10px;
      color: rgba(250,250,250,0.7);
    }
    button {
      padding: 0.5rem 1rem;
      font-size: 1rem;
      margin: 0.25rem 0.5rem 0.25rem 0;
      cursor: pointer;
      background-color: rgba(42, 42, 42, 0.6);
      backdrop-filter: blur(10px);
      color: rgba(250,250,250,0.7);
      border-radius: 10px;
    }
    .result {
      margin-top: 1rem;
      font-size: 1.1rem;
      color: rgba(250,250,250,0.7);
    }
  </style>
</head>
<body>
  <div class="container">
    <input type="text" id="timeInput" placeholder="點上班或下班產生時間" />
    <div>
      <button onclick="setTime('上班')">上班</button>
      <button onclick="setTime('下班')">下班</button>
      <button onclick="sendToWeChat()">打開微信</button>
      <button onclick="calculateLeaveTime()">預估下班時間</button>
      <button onclick="checkRemainingTime()">還剩多久？</button>
    </div>
    <div class="result" id="leaveTimeResult"></div>
    <div class="result" id="remainingTimeResult"></div>
  </div>

  <script>
    let lastCopiedText = '';

    // IndexedDB 基本初始化
    const dbName = 'PunchClockDB';
    const storeName = 'TimeStore';

    function openDB() {
      return new Promise((resolve, reject) => {
        const request = indexedDB.open(dbName, 1);

        request.onupgradeneeded = function (event) {
          const db = event.target.result;
          if (!db.objectStoreNames.contains(storeName)) {
            db.createObjectStore(storeName);
          }
        };

        request.onsuccess = () => resolve(request.result);
        request.onerror = () => reject(request.error);
      });
    }

    function saveTimeToDB(value) {
      openDB().then(db => {
        const tx = db.transaction(storeName, 'readwrite');
        const store = tx.objectStore(storeName);
        store.put(value, 'lastTime');
      });
    }

    function loadTimeFromDB() {
      openDB().then(db => {
        const tx = db.transaction(storeName, 'readonly');
        const store = tx.objectStore(storeName);
        const request = store.get('lastTime');

        request.onsuccess = function () {
          if (request.result) {
            document.getElementById('timeInput').value = request.result;
            lastCopiedText = request.result;
            calculateLeaveTime();
            checkRemainingTime();
          }
        };
      });
    }

    window.onload = function () {
      loadTimeFromDB();
    };

    function setTime(type) {
      const now = new Date();
      const month = String(now.getMonth() + 1).padStart(2, '0');
      const day = String(now.getDate()).padStart(2, '0');
      const hour = String(now.getHours()).padStart(2, '0');
      const minute = String(now.getMinutes()).padStart(2, '0');
      const timeStr = `${type} ${month}/${day} ${hour}:${minute}`;
      const input = document.getElementById('timeInput');
      input.value = timeStr;
      lastCopiedText = timeStr;

      saveTimeToDB(timeStr);
      calculateLeaveTime();
      checkRemainingTime();

      navigator.clipboard.writeText(timeStr).then(() => {
        alert('已複製到剪貼簿！');
      }).catch(err => {
        alert('複製失敗，請手動複製');
        console.error(err);
      });
    }

    function sendToWeChat() {
      if (!lastCopiedText) {
        alert('請先按上班或下班再傳送！');
        return;
      }
      location.href = 'weixin://';
    }

    function parseWorkTime() {
      const inputStr = document.getElementById('timeInput').value;
      const match = inputStr.match(/\d{2}\/\d{2} \d{2}:\d{2}/);
      if (!match) return null;

      const [datePart, timePart] = match[0].split(' ');
      const [month, day] = datePart.split('/');
      const [hour, minute] = timePart.split(':');
      const now = new Date();
      return new Date(now.getFullYear(), parseInt(month) - 1, parseInt(day), parseInt(hour), parseInt(minute));
    }

    function calculateLeaveTime() {
      const workTime = parseWorkTime();
      if (!workTime) {
        document.getElementById('leaveTimeResult').textContent = '';
        return;
      }
      workTime.setMinutes(workTime.getMinutes() + 510);
      const leaveStr = `預估下班時間：${String(workTime.getMonth() + 1).padStart(2, '0')}/${String(workTime.getDate()).padStart(2, '0')} ${String(workTime.getHours()).padStart(2, '0')}:${String(workTime.getMinutes()).padStart(2, '0')}`;
      document.getElementById('leaveTimeResult').textContent = leaveStr;
    }

    function checkRemainingTime() {
      const workTime = parseWorkTime();
      if (!workTime) {
        document.getElementById('remainingTimeResult').textContent = '';
        return;
      }

      const leaveTime = new Date(workTime.getTime());
      leaveTime.setMinutes(leaveTime.getMinutes() + 510);
      const now = new Date();
      const diff = leaveTime - now;

      if (diff <= 0) {
        document.getElementById('remainingTimeResult').textContent = '🎉 可以下班了！';
        return;
      }

      const hours = Math.floor(diff / 3600000);
      const minutes = Math.floor((diff % 3600000) / 60000);
      document.getElementById('remainingTimeResult').textContent = `⏳ 距離下班還有 ${hours} 小時 ${minutes} 分鐘`;
    }
  </script>
</body>
</html>
